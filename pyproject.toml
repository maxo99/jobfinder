[project]
name = "jobfinder"
version = "0.9.1"
description = "Utility for finding jobs"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "elasticsearch>=8.0.0 ,<9.0.0",
    "openai>=1.93.0",
    "pandas>=2.3.0",
    "python-jobspy>=1.1.80",
    "streamlit>=1.46.0",
]

[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ['src']
include = ['jobfinder*']

[tool.uv.workspace]
members = ["jobfinder"]

[tool.setuptools.package-data]
"*" = ["data/*", "data/**/*"]

[tool.uv.sources]
jobfinder = { workspace = true }

[dependency-groups]
dev = [
    "docker>=7.1.0",
    "jobfinder",
    "pytest>=8.4.1",
    "pytest-cov>=4.1.0",
    "pytest-docker",
]
streamlit-cloud = [
    "jobfinder",
    "watchtower>=3.4.0",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q  --cov=jobfinder --cov-report=xml --cov-report=html"
testpaths = ["tests"]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/jobfinder/__init__.py:__version__"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install uv && uv build"
tag_format = "v{version}"
major_on_zero = false
allow_zero_version = true
upload_to_vcs_release = true


[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "W1203",  # logging-format-interpolation
    "W0718",  # exception-escape
    "W0511",  # TODOs
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "x", "y", "z", "id", "db", "pk", "ok"]

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 6
max-branches = 12

[tool.pyright]
include = ["."]
exclude = [
    "**/node_modules",
    "**/cdk.out",
    "**/.pytest_cache",
    "**/build",
    "**/dist",
    "**/.vscode",
    "**/__pycache__",
]
reportMissingImports = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["jobfinder"]
