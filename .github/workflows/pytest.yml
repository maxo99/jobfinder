---
name: Pytest


on:
  push:
    branches:
      - main
      - feat/elasticsearch
  pull_request:
    branches:
      - main  

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [
            "3.11",
            #  "3.12"
            ]

    steps:
      - uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v2
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Install Venv
        run: uv venv
      - name: Install Dependencies
        run: uv pip install -e ".[dev]"
      - name: Test
        run: |
          uv run pytest  \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov=jobfinder tests/ \
          | tee pytest-coverage.txt
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          create-new-comment: true
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - name: Check the output coverage
        run: |
          echo "Coverage Percentage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}"
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
      


      
      - name: Pytest coverage comment
        if: ${{ github.ref == 'refs/heads/main' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./pytest-coverage.txt

      - name: Update Readme with Coverage Html
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n\${{ steps.coverageComment.outputs.coverageHtml }}\n<!-- Pytest Coverage Comment:End -->' ./README.md

      - name: Commit & Push changes to Readme
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "Update coverage on Readme" || exit 0
            git push

      # - name: Create the Badge
      #   uses: schneegans/dynamic-badges-action@v1.7.0
      #   with:
      #     auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
      #     gistID: 5e90d640f8c212ab7bbac38f72323f80
      #     filename: pytest-coverage-comment__main.json
      #     label: Coverage Report
      #     message: ${{ steps.coverageComment.outputs.coverage }}
      #     color: ${{ steps.coverageComment.outputs.color }}
      #     namedLogo: python