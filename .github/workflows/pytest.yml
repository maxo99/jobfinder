---
name: Pytest


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main  

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [
            "3.11",
            #  "3.12"
            ]

    steps:
      - uses: actions/checkout@v2

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
            enable-cache: true

      # - name: Set up Python ${{ matrix.python-version }}
      #   run: uv python install ${{ matrix.python-version }}
      - name: Install Venv
        run: uv venv

      - name: Install Dependencies
        run: uv sync --group dev


      - name: Ensure Docker Compose v2 is installed
        run: |
          if ! docker compose version; then
            sudo curl -SL https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose version
          fi


      - name: Wait for Postgres to be healthy
        run: |
          for i in {1..30}; do
            if docker compose exec -T postgres pg_isready -U postgres; then
              echo "Postgres is ready!"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Start only postgres and ollama (mock)
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d postgres ollama

      - name: Test
        run: |
          uv run pytest  \
          --junitxml=pytest.xml \
          --cov=jobfinder \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing:skip-covered \
          tests/ \
          | tee pytest-coverage.txt

      - name: Pytest coverage post comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          create-new-comment: true
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml


      - name: Pytest coverage comment on Readme
        if: ${{ github.ref == 'refs/heads/main' }}
        id: coverageReadmeHtml
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./pytest-coverage.txt

      - name: Update Readme with Coverage Html
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          sed -i "/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\${{ steps.coverageReadmeHtml.outputs.coverageHtml }}\n<!-- Pytest Coverage Comment:End -->" ./README.md

      - name: Commit & Push changes to Readme
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "Update coverage on Readme" || exit 0
            git push
